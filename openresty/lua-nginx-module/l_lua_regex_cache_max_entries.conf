#
# lua_regex_cache_max_entries
#   NOTE: 正则函数需要执行"o"选项，正则表达式才会被缓存；
#   当缓存的正则表达式超过限额：new regular expressions will not be cached. 并在日志当中写：
#         [warn] 10934#0: *4 lua exceeding regex cache max entries
events{}

http {
    lua_regex_cache_max_entries 1;
    error_log logs/error.log warn;

    server {
        # 如果无法缓存该正则表达式，ngx_lua会且只会打印一次warn
        location /foo {
            content_by_lua_block {
                local regex = [[\d+]]
                local m = ngx.re.match("hello, 1234", regex, "o")
                if m then ngx.say(m[0]) else ngx.say("not matched!") end
            }
        }

        location /bar {
            content_by_lua_block {
                -- 如果不匹配，正则表达式是不会被缓存的
                -- local regex = [["nihao\d+]]
                local regex = [[hello\d+]]
                local m = ngx.re.match("hello1234", regex, "o")
                if m then ngx.say(m[0]) else ngx.say("not matched!") end
            }
        }
    }
}
