#
# NOTICE：配置上还有一点问题，在backend server在返回失败的情况下，没有进行重试.
#
#
events{}
http {
    proxy_next_upstream error timeout http_500;
    lua_shared_dict dogs 1m;

    init_by_lua_block {
        local dogs = ngx.shared.dogs
        dogs:set("idx", 0)     -- 注意访问变量的方式
    }

    upstream backend {
        # balancer会忽略这些server指定的值
        # server 0.0.0.1;   # just an invalid address as a place holder
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;

        balancer_by_lua_block {
            -- NOTICE:  openresty已经将lua-resty-core继承进来，可直接使用
            local balancer = require "ngx.balancer"
            local host = "127.0.0.1"

            local port = 8001
            local dogs = ngx.shared.dogs
            num = dogs:get("idx")
            if num % 2 == 1 then
                port = 8002
            end
            dogs:set("idx", num+1)

            ngx.log(ngx.INFO, "port: ", port)
            ngx.log(ngx.INFO, "idx: ", num)
            balancer.set_current_peer(host, port)
        }

        keepalive 10;  # connection pool
    }

    server {
        listen 8000;
        location / {
            proxy_pass http://backend/fake;
        }
    }

    server {
        listen 8001;
        location / {
            return 500;
        }
    }

    server {
        listen 8002;
        location / {
            echo "this is the fake backend peer...";
        }
    }
}
