#
# 1. 每一个request都拥有一个独立的coroutine；
# 2. 一个worker只有一个Lua解释器
#
events{}

http {
    # init_by_lua_block {
    #    num = num or 0
    #}

    # 1. 通过下面的方式共享变量失败，如果没有init_by_lua_block，新的请求到来是，num被初始化为nil
    # 2. init_by_lua_block设置完以后，每次num的值都是0
    server {
        location /show {
            content_by_lua_block {
                ngx.print(num)
            }
        }

        location /add {
            content_by_lua_block {
                num = num + 1
            }
        }
    }

    # 加载一个外部模块，外部模块是共享的
    # 协程安全问题，应该不存在吧？
    lua_package_path "${prefix}?.lua;;";
    init_by_lua_block {
        require "libs/share"
    }

    server {
        listen 8001;
        location /show {
            content_by_lua_block {
                ngx.print(share.val)
            }
        }

        location /add {
            content_by_lua_block {
                share.val = share.val + 1
            }
        }
    }
}
