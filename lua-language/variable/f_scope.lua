--[[
--
-- 变量的作用范围
--  变量分为全局变量和局部变量。但是在脚本语言中，全局变量和局部变量都是动态生成的（不像C类语言一样，在编译期间已经明确了变量的作用范围）
--  脚本语言是一边执行，一边搜集全局变量和局部变量，并将它们放在各自的表当中
--  LUA和shell判断变量是否是全局，是根据关键字来判断的.
--
-- 一个变量是否是全局变量，不是看它被定义的位置和上下文环境，而是看有没有关键字local。
--   1. 在最外层使用local关键字，该变量也可认为是全局变量。
--   2. 在函数内部定义变量，未使用关键字local，则定义的是全局变量。
--   3. 别去考虑类似C语言当中的全局静态变量或局部静态变量
--
-- 通过关键字来判断该变量的作用范围，这也是bash的用法。但是现在高级的高级语言都摒弃了这种做法，转而根据变量的位置或上下文，来定义变量的作用范围
--]]

-- 在最外层使用关键字local
local number = 10
print(number)

-- 在函数内部定义全局变量
-- 注意：该全局变量也是随着程序的执行动态生成的，并非是一开始执行时就存在
function define_global()
    name="foo"
end
print(name) -- nil
define_global()
print(name) -- foo
