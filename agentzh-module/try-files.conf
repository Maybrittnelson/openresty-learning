#
# post-read server-rewite find-config rewrite post-rewrite
# pre-access access post-access try-files content log
#
# try-files:
#   NOTICE: 这个阶段专门用于实现标准配置指令 try_files 的功能
#   NOTICE: 不支持 Nginx 模块注册处理程序
#
# try_files 指令接受两个以上任意数量的参数，每个参数都指定了一个 URI. 这里假设配置了 N 个参数，
# 则 Nginx 会在 try-files 阶段，依次把前 N-1 个参数映射为文件系统上的对象（文件或者目录），
# 然后检查这些对象是否存在。一旦 Nginx 发现某个文件系统对象存在，就会在 try-files 阶段把当前请求的 URI 改写为该对象所对应的参数 URI（但不会包含末尾的斜杠字符，也不会发生 “内部跳转”）。
# NOTICE: 如果匹配到前N-1个文件后，会改写URI，改写URI但是不进行跳转.
# 如果前 N-1 个参数所对应的文件系统对象都不存在，try-files 阶段就会立即发起“内部跳转”到最后一个参数（即第 N 个参数）所指定的 URI.
#

events {}

http {
  server {
    location / {
        # 主要的目的是修改uri的值
        # 第一个是检查是否存在foo文件，第二个是检查是否存在bar目录
        try_files /foo /bar/ /baz;  # match时与用户的URI没有任何关系
        echo "uri: $uri";   # url: /bar后面没有斜杠
    }

    # 永远不会被执行
    location /foo {
        echo foo;
    }

    # 永远不会被执行
    location /bar/ {
        echo bar;
    }

    location /baz {
        echo baz;
    }
  }
}
