events{}

http {
  server {
    location / {
      # 在 rewrite 和 access 这两个阶段，多个模块的配置指令可以同时使用，
      # 譬如上例中的 set 指令和 rewrite_by_lua 指令同处 rewrite 阶段，而 deny 指令和 access_by_lua 指令则同处 access 阶段。
      # 但不幸的是，这通常不适用于 content 阶段。
      #
      # 在下面的指令中：echo和proxy_pass都是content阶段的指令，但是分属不同的模块
      #
      # echo_before_body 和 echo_after_body运行在Nginx的"输出过滤器"中，即在proxy_pass输出内容的时候，执行“输出过滤”
      # 这里“输出过滤”的方法就是在响应体的前后增加内容
      #
      # “输出过滤器”并不属于 （一） 中提到的那 11 个请求处理阶段（毕竟许多阶段都可以通过输出响应体数据来调用“输出过滤器”）
      # 但这并不妨碍 echo_before_body 和 echo_after_body 指令在文档中标记下面这一行： phase: output filter
      #
      echo_before_body "before...";
      proxy_pass http://127.0.0.1:8080/foo;   
      echo_after_body "after...";
    }
  }

  server {
    listen 8080;
    location / {
      echo "server on 8080";
    }
  }
}
