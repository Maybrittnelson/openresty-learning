#
# 默认情况下，worker一次只接收并处理一个请求
# multi_accept 允许一次接收多个连接
#
events {
    # 1. 关于multi_accept on提高吞吐量？
    #    该指令确实可以提高吞吐量。但前提是并发请求数较高，否则会出现负载不均衡。
    #    NOTICE: 一次接收的请求数不会超过worker_connections的值。
    #
    # 2. 关于multi_accept on降低延时？
    #    可以大大降低延时（包括平均延时、最大延时和标准偏差）
    #
    #
    # worker_processes 1;   # 测试前提
    #
    # $ wrk -t4 -c128 -d10s http://127.0.0.1
    # Running 10s test @ http://127.0.0.1
    #  4 threads and 128 connections
    #  Thread Stats   Avg      Stdev     Max   +/- Stdev
    #    Latency    37.86ms   73.48ms 650.90ms   88.22%
    #    Req/Sec     2.54k   823.68     6.31k    63.91%
    #  100949 requests in 10.01s, 18.09MB read
    # Requests/sec:  10081.29
    # Transfer/sec:      1.81MB
    #
    #
    # multi_accept on:
    # $ wrk -t4 -c128 -d10s http://127.0.0.1
    # Running 10s test @ http://127.0.0.1
    #  4 threads and 128 connections
    #  Thread Stats   Avg      Stdev     Max   +/- Stdev
    #    Latency    10.89ms    1.14ms  20.62ms   89.96% **延时大大降低**
    #    Req/Sec     2.95k   146.61     3.23k    74.00%
    #  117556 requests in 10.01s, 21.07MB read
    # Requests/sec:  11742.29(***有所提高***)
    # Transfer/sec:      2.10MB

    multi_accept on;
}

http {
    server {
        location / {
            echo "nihao";
        }
    }
}
