#
# nginx.conf 容器：存放变量值的内存块；
#   1. 不是所有的变量都拥有容器，例如arg_xxx。但模块会为arg_xxx设置get／set方法，
#      即：arg_xxx的值是基于其它变量分析得来的，arg_xxx变量不存在set方法;
#
#   2. 模块也可以选择对分析的结果进行缓存。
#      NOTICE：但是arg_xxx变量没有进行缓存，每次都是动态获取。
#      一个变量是否缓存下来，是由模块自己决定的.
#
events {}

http {

    # 1
    server {
        location / {
            #echo "arg_name=$arg_name";
            #echo "arg_age=$arg_age";
            set $name "$arg_name";
            set $age "$arg_age";
            # NOTICE: 修改args变量以后，成功影响到了arg_xxx变量
            # args的值被修改以后，arg_xxx的值立即生效，所以不存在缓存行为
            # NOTICE: SET指令是处于rewrite阶段，会先于ECHO指令执行
            set $args "name=yandong%20xiao&age=101";
            echo "name=$name";
            echo "age=$age";
            echo "arg_name=$arg_name";
            echo "arg_age=$arg_age";
        }
    }

    # 2
    # NOTICE: map指令相当于定义foo变量的get方法
    # foo变量只有在被引用时才会执行映射，缓存，而且映射只会被执行一次
    map $args $foo {
        default     0;  # foo的默认值为0
        debug       1;  # 如果args==debug，那么设置变量foo的值为1
    }

    server {
        listen 8001;
        location / {
            set $orig_foo $foo; # foo的值被应用，执行map指令，同时缓存foo的值
            set $args debug;    # 虽然修改了args的值，但是foo的容器内已经有缓存址，所以直接从容器中获取
            echo "orginal foo: $orig_foo";
            echo "foo: $foo";
        }
    }
}
