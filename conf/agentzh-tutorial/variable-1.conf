#
# nginx and lua:
#   1. nginx.conf 就像是一门微型的编程语言，编写nginx.conf就是在写一个小应用；
#   2. LUA作为extention laguage，也可以被用来编写配置文件；
#
# nginx.conf 变量：
#   1. 变量的类型：只能是字符串;
#   2. 变量的引用：变量插值，方便在字符串中嵌套变量；
#   3. 变量必须遵循：先创建后引用的原则;
#      NOTICE：赋值命令一般有创建变量的副作用，如set、geo，
#      NOTICE: 变量的创建是nginx根据配置文件，在启动时创建，处理请求阶段不允许创建变量
#   4. 变量的可见范围：所有变量都是全局变量；
#      NOTICE: 每个请求都有自己独立的变量副本，互不干扰;
#   5. 如何输出‘$’字符. 借助geo模块：
#      NOTICE：Nginx的不同模块实现了不同的指令，模块的实现决定了是否支持变量插值.
#
events{}

http {
    server {
        # 默认监听端口：8000
        # 1
        location /foo {
            set $var "100";     # 实际是字符串，最好加上引号
            echo "$var";        # 引用变量时最好两边加上引号，明确表明是字符串类型
        }

        # 2
        location /bar {
            set $var "hello";
            echo "$var, world";   # 采用变量插值，方便在字符串中嵌套变量
        }

        # 3
        location /mtu {
            set $var "hello";
            echo "${var}world";   # 变量插值，分割变量和字符串
        }

        # 3
        location /liverpool {
            # 下面的语句会导致Nginx.conf无法启动
            # nginx: [emerg] unknown "liverpool" variable
            # echo "${liverpool}";
        }

        # 4
        location /chelsea {
            echo "$var";    # 在其它location可见
        }
    }

    server {
        listen 8001;
        location / {
            echo "$var";    # 在其它server可见
        }
    }

    # 5
    geo $var {      # 创建和赋值变量的方法多种多样，不止set命令
        default $;
    }

    server {
        listen 8002;
        location / {
            echo "I love $var";   # echo 指令支持变量插值
        }
    }
}
