events{}

http {
  lua_package_path "${prefix}/lua/?.lua";
  init_by_lua 'mp = dofile("/root/git/nginx-learning/lua/libs/people.lua")';

  #
  # 默认值就是on
  # 如果设置为off，every request served by ngx_lua will run in a separate Lua VM instance
  # 所以每个VM都需要加载需要的LUA模块
  #
  lua_code_cache on;
  server {
    location / {
      content_by_lua_block {
        -- 注意：lua_code_cache功能会将lua代码进行缓存，所以你修改了lua代码以后不会立即生效
        -- user code is loaded once at the first request
        -- 需要执行reload进行重载
        local age = require "libs.people"
        age()
      }
    }

    location /test {
      content_by_lua_block {
        --
        -- dofile的参数必须是绝对路径，我试过相对路径，基于lua_package_path的路径，都不好使
        -- 使用的是斜杠，而不是.
        --
        -- 即使LUA code cache功能开启了，使用dofile和loadfile加载的lua code是不会被缓存的
        --
        local f = dofile("/root/git/nginx-learning/lua/libs/people.lua")
        f()
        
        -- 注意mp缓存了lua code, 所以它不会随着代码的更新而更新
        -- mp()
      }
    }
  }
}
