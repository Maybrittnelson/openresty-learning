events{}


http {
    #
    # 定义一个共享的dict，所有请求都可以访问该dict
    # Declares a shared memory zone
    # shared by all the nginx worker processes 
    # the shared memory will not be cleared through a config reload
    #
    lua_shared_dict dogs 1m;

    init_by_lua_block {
        --
        -- 通过lua访问该dict的方式
        -- 1. ngx.share.dogs
        -- 2. 按照dict的访问方式，访问其中的变量
        --
        local dogs = ngx.shared.dogs
        dogs:set("Tom", 56)
    }

    server {
        location / {
            content_by_lua_block {
                local dogs = ngx.shared.dogs;
                num = dogs:get("Tom")
                dogs:set("Tom", num+1)
                ngx.say(num)
            }
        }
    }
}
