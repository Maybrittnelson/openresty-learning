events{}

http {
    # o option 并不是nginx or openresty的一个选项
    # 而是每次调用match/sub的时候，可以指定的option
    # 正则表达式可以进行缓存
    #
    lua_regex_cache_max_entries 1;
    server {
        location / {
            content_by_lua_block {
                ngx.req.read_body()
                data = ngx.req.get_body_data()
                local m, err = ngx.re.match(data, "[0-9]+", "o")
                if (m) then
                    ngx.say(m[0])
                else
                    ngx.say("not match")
                end
            }
        }

        location /test {
            content_by_lua_block {
                local m, err = ngx.re.match("nhao", "[a-z]+", "o")
                if (m) then
                    ngx.say(m[0])
                else
                    ngx.say("not match")
                end
            }
        }
    }
}
