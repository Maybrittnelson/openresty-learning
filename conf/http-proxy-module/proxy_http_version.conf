#
# 1. HTTP 1.1 has a required Host header by spec.
# HTTP 1.1协议要求请求头中**必须**包含Host字段。
# Nginx利用Host字段可做到：允许多个server监听在同一个IP地址的同一个端口，通过Host字段区分。
#
# 2. Persistent connections
# HTTP协议是建立在TCP/IP协议之上，HTTP-1.0是每一个请求都需要创建一个新的连接，
# 服务器返回响应后，立即关闭连接。
# HTTP 1.1协议允许多个HTTP请求复用同一个TCP/IP连接。
#
# 3. Caching
# HTTP 1.1 拥有更多的响应头，例如：If-Modified-Since，If-Unmodified-Since，If-Match, If-None-Match和Cache-Control。
#
# 4. 100 Continue
# 100 continue的作用是允许客户端分开发送请求头和请求体。
# There is a new return code in HTTP/1.1 100 Continue.
# This is to prevent a client from sending a large request when that client is not even sure
# if the server can process the request, or is authorized to process the request.
# In this case the client sends only the headers, and the server will tell the client 100 Continue, go ahead with the body.

# 尝试试验100 continue
#   1. proxy_http_version即使使用了1.1协议，Nginx还是会将请求头和请求体都接收到以后，才会向proxied server发送请求.
#      所以Nginx作为代理服务器，与proxied server之间是不会通过100-continue的方式进行通信的.
#   2. curl -v -H "Expect: 100-continue" -X POST --data "nihao" '127.0.0.1:8001' 直发请求到8001端口，因为deny指令的存在，
#      在client没有将请求体上传成功之前，就会返回403.
events{}

http {
    server {
        location / {
            proxy_http_version 1.1;
            proxy_pass_header expect;
            proxy_pass http://localhost:8001;
        }
    }

    server {
        listen 8001;
        location / {
            deny 127.0.0.1;
            echo "helloworld";
        }
    }
}
