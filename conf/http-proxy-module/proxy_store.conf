#
# curl -v '127.0.0.1:8000/images/name.jpg'
# 第一次curl请求，Nginx会去proxied server取数据；第二次数据已经在Nginx了，直接返回给用户.
#
# proxy_cache VS proxy_store 的区别：
# 前者的路径和文件名是以MD5为基础算出来的, 例如c/29/b7f54b2df7773722d382f4809d65029c
# 而后者会保存文件的完整路径。且不存在过期等行为.
# 根据自己的实际用途去选择
#
events{}

http {
    log_subrequest on;
    server {
        # curl -v '127.0.0.1:8000/images/name.jpg'
        location /images/ {
            # 查找文件 /tmp/www/images/name.jpg, 不存在
            root /tmp/www;
            error_page         404 = /fetch$uri;
        }

        # 内部请求，uri=/fetch/images/name.jpg
        location /fetch/ {
            internal;
            # 转发请求到8001； uri=/fetch/images/name.jpg
            proxy_pass         http://127.0.0.1:8001;
            proxy_store        on;
            proxy_store_access user:rw group:rw all:r;
            proxy_temp_path    /tmp/temp;
            # alias指令将uri映射为/tmp/www/images/name.jpg, 这就是proxy_store存储图片的位置.
            alias              /tmp/www/;
        }
    }

    server {
        listen 8001;
        location / {
            echo "helloworld";
        }
    }
}
