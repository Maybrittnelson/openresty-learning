events {

}

http {
    #
    # 定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，
    # 以$binary_remote_addr为key,限制平均每秒的请求为1个，
    # 1M能存储16000个状态，rete的值必须为整数，
    #
    # 既然是以binary_remote_addr作为key，所以它设置的是允许一个客户在1s内能够发送的最多请求数目
    limit_req_zone $binary_remote_addr zone=allips:10m rate=1r/s;
    server{
        location / {
            # If the requests rate exceeds the rate configured for a zone, their processing
            # is delayed such that requests are processed at a defined rate. Excessive requests are delayed 
            # until their number exceeds the maximum burst size in which case the request is terminated with 
            # an error 503 (Service Temporarily Unavailable). By default, the maximum burst size is equal to zero.
            # limit_req zone=allips burst=1;  

            #
            # 只是让滞留在桶内的数据能够立即返回给客户端，但是并不能认为桶中少了一个request
            # 桶内数据的减少只是跟时间有关系
            #
            limit_req zone=allips burst=1 nodelay;  

            # 不但限制客户端请求数量
            # 还可以限制virtual host处理请求的速度， 注意不要让它们使用同一个zone
            # 其实我们可以将它们放在同一个zone，只要它们Key不一样就行了
            # 
            # limit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;
            # limit_req_zone $server_name zone=perserver:10m rate=10r/s;
        }
    }
}
