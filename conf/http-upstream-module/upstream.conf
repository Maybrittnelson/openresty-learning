#
events {}

http {
    upstream backend {
        # A domain name that resolves to several IP addresses defines multiple servers at once.
        # NOTE: 采用域名时，如果域名被解析为多个IP地址，那么就相当于定义了多个server指令.
        #       可以变向的认为是对解析出来的地址进行轮询请求.
        # NOTE: 每一个server的权重值默认是1.
        # NOTE: domain的方式也造成了它的权重值比较高(N * weight)
        #
        # NOTE: 支持HTTP套接字和UNIX套接字的混合使用
        server 127.0.0.1:8000;
        #
        # 它返回404, 500, 该请求都没有重新被转发
        # 如果关闭了对9000端口的监听，我们发现所有请求都被转发到了8000端口(属于proxy_next_upstream的error情况)
        # 如果8000，9000端口都同时挂掉，502 Bad Gateway返回给客户端
        #
        # http_XXX_proxy模块定义了何种情况下进行重试，比如proxy_next_upstream模块定义了error和timeout的情况下，请求才会被重试
        server 127.0.0.1:9000;

        # NOTE: 只有当上面的server都无法响应时，Nginx才会把请求转发给该server
        # NOTE: 由于proxy_next_module指令的默认值认为error或timeout情况，请求才会被转发。
        # 所以，上面的server在返回400或500错误时，请求并不会被转发。
        server 127.0.0.1:9001 backup;
    }

    server {
        location / {
            proxy_pass http://backend;
        }
    }

    server {
        listen 9000;
        location / {
            return 500;
        }
    }

    server {
        listen 8000;
        location / {
            echo "8000";
        }
    }

    server {
        listen 9001;
    }
}
