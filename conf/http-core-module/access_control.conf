#
# limit_except, http_access_module, http-auth-basic-module三个模块都做Nginx的访问控制模块
#   limit_except: 指定该location可以由哪些http method访问
#   http-access-module: 只有两个指令allow和deny, 它们后面跟着的参数类型可以是一个IP地址、网络地址、all
#                       NOTE: 域名是不可以的
#   http-auth-basic-module: 使用“HTTP Basic Authentication”协议，验证请求的用户名和密码

events{}

http {
    # 1. limit_except
    # NOTE:
    #   limit_except是access阶段的命令，所以它无法组织选择location的过程. 即使被限制的HTTP Method也经过
    # 了“find config”这个阶段.
    #   当limit_except指令发现HTTP Method不正确时，并没有一棍子打死，直接返回405.
    #   ***** limit_except 的本意是：
    #       NOTE: 如果HTTP Method的不匹配, 则执行大括号中的约束限制，违背限制时直接返回对应错误
    #             如果非POST请求绕过了这些限制，则会跳过content阶段的指令. 然后就会执行默认content阶段的指令.
    server {
        # 所以下面的指令的真是含义是：所有POST请求都返回hello，其它请求走content的默认处理方式.
        # 所以该请求curl -v 127.0.0.1:8000/会返回index.html的内容，外加after....
        location / {
            limit_except POST{}
            echo hello;
            echo_after_body "after...";
        }
    }

    # 2. http-access-module
    # 多条配置指令之间是按顺序执行的，**直到遇到第一条满足条件的指令就不再执行后续的** allow 和 deny 指令
    server {
        listen 8001;
        location / {
            deny 127.0.0.1;
            allow all;
        }
    }

    # 3. http-auth-basic-module
    # Basic Auth 包含两条指令，使用时，缺一不可；否则跟没设置一样.
    server {
        listen 8002;
        location / {
            # 如果用户认证失败了，不但会返回401，在响应头还会有WWW-Authenticate
            # WWW-Authenticate：告知了用户服务器端使用的认证方式和提示语
            # 这个提示语就是由auth_basic指定的, 可以是任意内容
            #
            # auth_basic_user_file:  提供了类似/etc/passwd文件的格式，文件名:加密密码
            #
            # 用户通过 curl 'test:test@localhost' 的方式指定用户名和密码
            #
            auth_basic           "$uri";
            # name1:password1
            # *** htpasswd -m /tmp/passwd.conf xx 生成的密码文件中，密码是加密的 ***
            auth_basic_user_file /tmp/passwd.conf;
        }
    }

    # 4. 在一起
    server {
        listen 8003;
        dav_methods PUT;
        root /tmp/upload/;
        location / {
            # curl -v -X PUT '127.0.0.1:8003' 含义如下：
            # 因为是PUT请求，所以被收到限制。限制的内容就是大括号内的内容.
            # 1. allow 127.0.0.1.
            # 2. curl -v -X PUT 'xx:zz@127.0.0.1:8003'
            # 这时改请求才能绕过所有的限制, 上传文件成功.
            limit_except GET {
                # 按照顺序进行执行
                auth_basic           "$uri";
                auth_basic_user_file /tmp/passwd.conf;
                deny 127.0.0.1;    # deny时直接返回403
                deny all;
            }
            echo 8003;
        }
    }
}
