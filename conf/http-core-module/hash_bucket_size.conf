#
# http://nginx.org/en/docs/hash.html
# bucket size: 当KEY的hash值相等时，用一个bucket来存放这些hash值相等的KEY,
# 一个bucket可以存放的KEY的数量是有个数限制的，不超过hash_bucket_size.
#
# 所以一个hash表的大小就是bucket的个数
# 一个hash表的静态总大小是由hash_max_size来设置的，当要存放的元素内容过多时，某个bucket存放的KEY
# 的数量就会超过hash_bucket_size. 此时nginx就会警告说，需要扩大hash_bucket_size或hash_max_size
#
# nginx: [warn] could not build optimal types_hash, you should increase either types_hash_max_size:
# 1 or types_hash_bucket_size: 64; ignoring types_hash_bucket_size
# 触发该warn的原因就是types下面写了四项记录，超过了一个bucket_size的大小
#
# NOTE: 我们有限扩大hash_max_size的值
# NOTE: 注意使用对象: To quickly process static sets of data such as
# ***server names, map directive’s values, MIME types, names of request header strings***, nginx uses hash tables.
#
# 启动时会给出warnning，我们按照要求优化即可
#
events{}

http {
    server {
        types_hash_bucket_size 8;
        types_hash_max_size 1;

        types {
            text/html  html;
            image/gif  gif;
            image/jpeg jpg;
            application/octet-stream deb;
        }

        location / {

        }
    }
}
