events{}

http {
    server {
        location / {
            set $val "nihao";
            # 不能凭空创建var.xx变量
            content_by_lua_block {
                -- 输出的是参数的内容
                ngx.say(ngx.var.arg_d)

                -- only already defined nginx variables can be written to
                -- lua entry thread aborted: runtime error: content_by_lua(date.conf:12):5: variable "mm" not found for writing;
                -- ngx.var.mm  = 10
                -- ngx.say(ngx.var.mm)

                ngx.var.val=nil --删除该变量，下面的输出就是nil
                ngx.say(ngx.var.val)

                -- When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination.
                -- 有些变量是非索引类型，每次的get操作都是计算出来的，所以消耗CPU和内存
                -- So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable
                local val = ngx.var.arg_d
                ngx.say(val)
            }
        }

        location ~ /(.*).jpg {
            content_by_lua_block {
                ngx.say(ngx.var[1])
            }
        }
    }
}
